{
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Extensions.Environment | API Documentation",
    "keywords": "OpenCollar.Extensions.Environment Support for automatic validation, update and strongly-typed access to configuration. NuGet Package Installation Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.Environment/"
  },
  "api/OpenCollar.Extensions.Environment.ApplicationService.html": {
    "href": "api/OpenCollar.Extensions.Environment.ApplicationService.html",
    "title": "Class ApplicationService | API Documentation",
    "keywords": "Class ApplicationService A service that provides information and utilities allowing metadata about an application to be shared throught an application's components. Inheritance System.Object ApplicationService Implements IApplicationService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public sealed class ApplicationService : IApplicationService Constructors | Improve this Doc View Source ApplicationService(IEnvironmentMetadataProvider) Initializes a new instance of the ApplicationService class. Declaration public ApplicationService(IEnvironmentMetadataProvider provider) Parameters Type Name Description IEnvironmentMetadataProvider provider The custom provider of environment metadata. Properties | Improve this Doc View Source Environment Gets an object that provides basic metadata about the environment in which the application is running. Declaration public IEnvironmentMetadata Environment { get; } Property Value Type Description IEnvironmentMetadata An object that provides basic metadata about the environment in which the application is running Methods | Improve this Doc View Source GetResourceEnvironment(String) Gets the environment from a resource name. Declaration public string GetResourceEnvironment(string resourceName) Parameters Type Name Description System.String resourceName The environment from a resource name. This could be a database name, a Returns Type Description System.String The environment name for the environment, e.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. Environment names are always treated as case insensitive. | Improve this Doc View Source IsValidEnvironmentPairing(String, Boolean) Determines whether the specified resource should be used in the application environment. Declaration public bool? IsValidEnvironmentPairing(string resourceName, bool permitFuzzyResults = false) Parameters Type Name Description System.String resourceName The name of the resource to validate. System.Boolean permitFuzzyResults If set to true unknown environments (where the environment name is identified as null ) are permitted to match with anything. Returns Type Description System.Nullable < System.Boolean > true if the specified resource should be used in the application environment; otherwise, false . null will be returned if the value could not be determined and permitFuzzyResults is true . | Improve this Doc View Source ValidateResourcePairing(String, Boolean) Validates the pairing of the resource named and the current environment, throwing a MismatchedEnvironmentException exception if they are deemed incompatible. Declaration public void ValidateResourcePairing(string resourceName, bool permitFuzzyResults) Parameters Type Name Description System.String resourceName The name of the resource to validate. System.Boolean permitFuzzyResults If set to true unknown environments (where the environment name is identified as null ) are permitted to match with anything. Exceptions Type Condition MismatchedEnvironmentException The given resource is not compatible with application environment. Implements IApplicationService"
  },
  "api/OpenCollar.Extensions.Environment.EnvironmentMetadata.html": {
    "href": "api/OpenCollar.Extensions.Environment.EnvironmentMetadata.html",
    "title": "Class EnvironmentMetadata | API Documentation",
    "keywords": "Class EnvironmentMetadata A minimal implementation of the IEnvironmentMetadata interface that can be used a base class. Inheritance System.Object EnvironmentMetadata Implements IEnvironmentMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public abstract class EnvironmentMetadata : IEnvironmentMetadata Constructors | Improve this Doc View Source EnvironmentMetadata() Initializes a new instance of the EnvironmentMetadata class. Declaration protected EnvironmentMetadata() | Improve this Doc View Source EnvironmentMetadata(String, String, String, String, String, Nullable<Boolean>) Initializes a new instance of the EnvironmentMetadata class. Declaration protected EnvironmentMetadata(string resourceName, string environment, string location, string resourceType, string instance, bool? isEmulated) Parameters Type Name Description System.String resourceName The name of the resource. null will be accepted if the value could not be determined. System.String environment The functional environment in which the adapter is hosted. null will be accepted if the value could not be determined. Environment names are always treated as case insensitive. System.String location The location of the resource. null will be accepted if the value could not be determined. System.String resourceType The type of the resource, for example \"Container\", \"WebApp\", \"Database\", etc. null will be accepted if the value could not be determined. System.String instance The instance of the resource. null will be accepted if the value could not be determined. System.Nullable < System.Boolean > isEmulated true if the host is locally emulated (rather than running on a genuine environment).; otherwise, false . null will be accepted if the value could not be determined. Properties | Improve this Doc View Source Environment Gets the functional environment in which the adapter is hosted. Declaration public string Environment { get; protected set; } Property Value Type Description System.String The functional environment in which the adapter is hosted. null will be returned if the value could not be determined. Environment names are always treated as case insensitive. Examples E.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. | Improve this Doc View Source Instance Gets the instance of the resource. Declaration public string Instance { get; protected set; } Property Value Type Description System.String The instance of the resource. null will be returned if the value could not be determined. Examples E.g. \"100\" or \"A\". | Improve this Doc View Source IsEmulated Gets a value indicating whether the host is locally emulated (rather than running on a genuine environment). Declaration public bool? IsEmulated { get; protected set; } Property Value Type Description System.Nullable < System.Boolean > true if the host is locally emulated (rather than running on a genuine environment).; otherwise, false . null will be returned if the value could not be determined. | Improve this Doc View Source Location Gets the location of the resource. Declaration public string Location { get; protected set; } Property Value Type Description System.String The location of the resource. null will be returned if the value could not be determined. Examples E.g. \"East US 2\" or \"UK South\". | Improve this Doc View Source ResourceName Gets the name of the resource. Declaration public string ResourceName { get; protected set; } Property Value Type Description System.String The name of the resource. null will be returned if the value could not be determined. Remarks The hostname may well encode all of the other information in this object. Examples E.g. \"uk-dev-db-1\" or \"east-webapp-prod-10\". | Improve this Doc View Source ResourceType Gets the type of the resource. Declaration public string ResourceType { get; protected set; } Property Value Type Description System.String The type of the resource, for example \"Container\", \"WebApp\", \"Database\", etc. null will be returned if the value could not be determined. Remarks E.g. \"Container\", \"WebApp\" or \"Database\". Implements IEnvironmentMetadata See Also IEnvironmentMetadata"
  },
  "api/OpenCollar.Extensions.Environment.EnvironmentMetadataProvider.html": {
    "href": "api/OpenCollar.Extensions.Environment.EnvironmentMetadataProvider.html",
    "title": "Class EnvironmentMetadataProvider | API Documentation",
    "keywords": "Class EnvironmentMetadataProvider A base class from environment metadata providers that implements the basic functionality. Inheritance System.Object EnvironmentMetadataProvider Implements IEnvironmentMetadataProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public abstract class EnvironmentMetadataProvider : IEnvironmentMetadataProvider Constructors | Improve this Doc View Source EnvironmentMetadataProvider(String, EnvironmentType[]) Initializes a new instance of the EnvironmentMetadataProvider class. Declaration protected EnvironmentMetadataProvider(string applicationResourceName, params EnvironmentType[] environmentTypes) Parameters Type Name Description System.String applicationResourceName Name of the application resource. EnvironmentType [] environmentTypes The environment types. Exceptions Type Condition OpenCollar.Extensions.BadImplementationException GetEnvironmentMetadata(String) returned null . System.ArgumentException environmentTypes contains a null value. System.ArgumentNullException applicationResourceName is null . System.ArgumentException applicationResourceName is zero-length of contains only whote-space characters. Properties | Improve this Doc View Source EnvironmentTypes Gets the types of environment in which an application or resource may be found . Declaration public IEnumerable<EnvironmentType> EnvironmentTypes { get; } Property Value Type Description System.Collections.Generic.IEnumerable < EnvironmentType > The environment in which an application or resource may be found. Methods | Improve this Doc View Source GetEnvironmentMetadata() Gets an object that provides basic metadata about the environment in which the application is running. Declaration public IEnvironmentMetadata GetEnvironmentMetadata() Returns Type Description IEnvironmentMetadata | Improve this Doc View Source GetEnvironmentMetadata(String) Gets an object that provides basic metadata about the resource specified. Declaration public abstract IEnvironmentMetadata GetEnvironmentMetadata(string resourceName) Parameters Type Name Description System.String resourceName The name of the resource for which to determine the environment metadata. Returns Type Description IEnvironmentMetadata | Improve this Doc View Source GetEnvironmentType(IEnvironmentMetadata) Gets the type of the environment to which the metadata object refers. Declaration public EnvironmentType GetEnvironmentType(IEnvironmentMetadata metadata) Parameters Type Name Description IEnvironmentMetadata metadata The metadata object for which to get an environment. Returns Type Description EnvironmentType The environment type for the metadata object given, or null if no match could be found. | Improve this Doc View Source GetResourceEnvironment(String) Gets the environment from a resource name. Declaration public string GetResourceEnvironment(string resourceName) Parameters Type Name Description System.String resourceName The name of the resource for which to determine the environment. Returns Type Description System.String The environment name for the environment, e.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. Environment names are always treated as case insensitive. Exceptions Type Condition OpenCollar.Extensions.BadImplementationException GetEnvironmentMetadata(String) returned null . | Improve this Doc View Source IsValidEnvironmentPairing(IEnvironmentMetadata, String) Determines whether the specified resource should be used with the environment metadata given. Declaration public virtual bool? IsValidEnvironmentPairing(IEnvironmentMetadata environmentMetadata, string resourceName) Parameters Type Name Description IEnvironmentMetadata environmentMetadata The metadata defining the application environment. System.String resourceName The name of the resource to validate. Returns Type Description System.Nullable < System.Boolean > true if the specified resource should be used with the environment metadata given; otherwise, false . null will be returned if the value could not be determined. Implements IEnvironmentMetadataProvider See Also IEnvironmentMetadataProvider"
  },
  "api/OpenCollar.Extensions.Environment.EnvironmentType.html": {
    "href": "api/OpenCollar.Extensions.Environment.EnvironmentType.html",
    "title": "Class EnvironmentType | API Documentation",
    "keywords": "Class EnvironmentType A class representing an environment to which a resource may belong. Inheritance System.Object EnvironmentType Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public sealed class EnvironmentType Constructors | Improve this Doc View Source EnvironmentType(String, String, UInt32, String[]) Initializes a new instance of the EnvironmentType class. Declaration public EnvironmentType(string name, string description, uint sensitivity, params string[] acronyms) Parameters Type Name Description System.String name The name of the environment, for example \"Production\" or \"QA\". System.String description The description of the environment, for example \"The production environment\" or \"Quality and performance testing environment\". System.UInt32 sensitivity The sensitivity of the environment where zero means that an environment is completely disposable and there is no impact of damaging the data and configuration, and greater values, up to System.Int32.MaxValue indicate increasing criticality up to that of production environments. System.String [] acronyms The acronyms that might be used to represent the environment, e.g. \"P\", \"PDN\", \"PRD\", \"PROD\" may all be used for the production environment. Properties | Improve this Doc View Source Acronyms Gets the acronyms that might be used to represent the environment. Declaration public IReadOnlyList<string> Acronyms { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.String > The acronyms that might be used to represent the environment, e.g. \"P\", \"PDN\", \"PRD\", \"PROD\" may all be used for the production environment. | Improve this Doc View Source Description Gets the description of the environment. Declaration public string Description { get; } Property Value Type Description System.String The description of the environment, for example \"The production environment\" or \"Quality and performance testing environment\". | Improve this Doc View Source Name Gets the name of the environment. Declaration public string Name { get; } Property Value Type Description System.String The name of the environment, for example \"Production\" or \"QA\". | Improve this Doc View Source Sensitivity Gets the sensitivity or criticality of the environment. Higher numbers indicate greater sensitivity. Declaration public uint Sensitivity { get; } Property Value Type Description System.UInt32 The sensitivity of the environment where zero means that an environment is completely disposable and there is no impact of damaging the data and configuration, and greater values, up to System.Int32.MaxValue indicate increasing criticality up to that of production environments. Methods | Improve this Doc View Source CompareTo(EnvironmentType) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(EnvironmentType other) Parameters Type Name Description EnvironmentType other An object to compare with this instance. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other . Greater than zero This instance follows other in the sort order. | Improve this Doc View Source CompareTo(Object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj An object to compare with this instance. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj . Greater than zero This instance follows obj in the sort order. Exceptions Type Condition System.ArgumentException obj is not the same type as this instance. | Improve this Doc View Source Equals(EnvironmentType) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(EnvironmentType other) Parameters Type Name Description EnvironmentType other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(EnvironmentType, EnvironmentType) Returns a value that indicates whether the values of two EnvironmentType objects are equal. Declaration public static bool operator ==(EnvironmentType left, EnvironmentType right) Parameters Type Name Description EnvironmentType left The first value to compare. EnvironmentType right The second value to compare. Returns Type Description System.Boolean true if the left and right parameters have the same value; otherwise, false . | Improve this Doc View Source GreaterThan(EnvironmentType, EnvironmentType) Returns a value that indicates whether a EnvironmentType value is greater than another EnvironmentType value. Declaration public static bool operator>(EnvironmentType left, EnvironmentType right) Parameters Type Name Description EnvironmentType left The first value to compare. EnvironmentType right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source GreaterThanOrEqual(EnvironmentType, EnvironmentType) Returns a value that indicates whether a EnvironmentType value is greater than or equal to another EnvironmentType value. Declaration public static bool operator >=(EnvironmentType left, EnvironmentType right) Parameters Type Name Description EnvironmentType left The first value to compare. EnvironmentType right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source Inequality(EnvironmentType, EnvironmentType) Returns a value that indicates whether two EnvironmentType objects have different values. Declaration public static bool operator !=(EnvironmentType left, EnvironmentType right) Parameters Type Name Description EnvironmentType left The first value to compare. EnvironmentType right The second value to compare. Returns Type Description System.Boolean true if left and right are not equal; otherwise, false . | Improve this Doc View Source LessThan(EnvironmentType, EnvironmentType) Returns a value that indicates whether a EnvironmentType value is less than another EnvironmentType value. Declaration public static bool operator <(EnvironmentType left, EnvironmentType right) Parameters Type Name Description EnvironmentType left The first value to compare. EnvironmentType right The second value to compare. Returns Type Description System.Boolean true if left is less than right ; otherwise, false . | Improve this Doc View Source LessThanOrEqual(EnvironmentType, EnvironmentType) Returns a value that indicates whether a EnvironmentType value is less than or equal to another EnvironmentType value. Declaration public static bool operator <=(EnvironmentType left, EnvironmentType right) Parameters Type Name Description EnvironmentType left The first value to compare. EnvironmentType right The second value to compare. Returns Type Description System.Boolean true if left is less than or equal to right ; otherwise, false ."
  },
  "api/OpenCollar.Extensions.Environment.html": {
    "href": "api/OpenCollar.Extensions.Environment.html",
    "title": "Namespace OpenCollar.Extensions.Environment | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Environment Classes ApplicationService A service that provides information and utilities allowing metadata about an application to be shared throught an application's components. EnvironmentMetadata A minimal implementation of the IEnvironmentMetadata interface that can be used a base class. EnvironmentMetadataProvider A base class from environment metadata providers that implements the basic functionality. EnvironmentType A class representing an environment to which a resource may belong. MismatchedEnvironmentException An exception that represents a mismatch in environments (between the application environment and a resource that the application depends upon). ServiceCollectionFluentExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing the application service and related services to be registered. Interfaces IApplicationService The public interface of a service that provides information and utilities allowing metadata about an application to be shared throught an application's components. IEnvironmentMetadata The interface for objects that represent the environment in which an application is hosted. IEnvironmentMetadataProvider The public interface of a service that provides the environment metadata for a given application."
  },
  "api/OpenCollar.Extensions.Environment.IApplicationService.html": {
    "href": "api/OpenCollar.Extensions.Environment.IApplicationService.html",
    "title": "Interface IApplicationService | API Documentation",
    "keywords": "Interface IApplicationService The public interface of a service that provides information and utilities allowing metadata about an application to be shared throught an application's components. Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public interface IApplicationService Properties | Improve this Doc View Source Environment Gets an object that provides basic metadata about the environment in which the application is running. Declaration IEnvironmentMetadata Environment { get; } Property Value Type Description IEnvironmentMetadata An object that provides basic metadata about the environment in which the application is running. Environment names are always treated as case insensitive. Methods | Improve this Doc View Source GetResourceEnvironment(String) Gets the environment from a resource name. Declaration string GetResourceEnvironment(string resourceName) Parameters Type Name Description System.String resourceName The environment from a resource name. This could be a database name, a server name or similar. Returns Type Description System.String The environment name for the resource given, e.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. null will be returned if the value could not be determined. Environment names are always treated as case insensitive. | Improve this Doc View Source IsValidEnvironmentPairing(String, Boolean) Determines whether the specified resource should be used in the application environment. Declaration bool? IsValidEnvironmentPairing(string resourceName, bool permitFuzzyResults = false) Parameters Type Name Description System.String resourceName The name of the resource to validate. System.Boolean permitFuzzyResults If set to true unknown environments (where the environment name is identified as null ) are permitted to match with anything. Returns Type Description System.Nullable < System.Boolean > true if the specified resource should be used in the application environment; otherwise, false . null will be returned if the value could not be determined and permitFuzzyResults is true . | Improve this Doc View Source ValidateResourcePairing(String, Boolean) Validates the pairing of the resource named and the current environment, throwing a MismatchedEnvironmentException exception if they are deemed incompatible. Declaration void ValidateResourcePairing(string resourceName, bool permitFuzzyResults = false) Parameters Type Name Description System.String resourceName The name of the resource to validate. System.Boolean permitFuzzyResults If set to true unknown environments (where the environment name is identified as null ) are permitted to match with anything. Exceptions Type Condition MismatchedEnvironmentException The given resource is not compatible with application environment."
  },
  "api/OpenCollar.Extensions.Environment.IEnvironmentMetadata.html": {
    "href": "api/OpenCollar.Extensions.Environment.IEnvironmentMetadata.html",
    "title": "Interface IEnvironmentMetadata | API Documentation",
    "keywords": "Interface IEnvironmentMetadata The interface for objects that represent the environment in which an application is hosted. Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public interface IEnvironmentMetadata Properties | Improve this Doc View Source Environment Gets the functional environment in which the adapter is hosted. Declaration string Environment { get; } Property Value Type Description System.String The functional environment in which the adapter is hosted. null will be returned if the value could not be determined. Environment names are always treated as case insensitive. Examples E.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. | Improve this Doc View Source Instance Gets the instance of the resource. Declaration string Instance { get; } Property Value Type Description System.String The instance of the resource. null will be returned if the value could not be determined. Examples E.g. \"100\" or \"A\". | Improve this Doc View Source IsEmulated Gets a value indicating whether the host is locally emulated (rather than running on a genuine environment). Declaration bool? IsEmulated { get; } Property Value Type Description System.Nullable < System.Boolean > true if the host is locally emulated (rather than running on a genuine environment).; otherwise, false . null will be returned if the value could not be determined. | Improve this Doc View Source Location Gets the location of the resource. Declaration string Location { get; } Property Value Type Description System.String The location of the resource. null will be returned if the value could not be determined. Examples E.g. \"East US 2\" or \"UK South\". | Improve this Doc View Source ResourceName Gets the name of the resource. Declaration string ResourceName { get; } Property Value Type Description System.String The name of the resource. null will be returned if the value could not be determined. Remarks The hostname may well encode all of the other information in this object. Examples E.g. \"uk-dev-db-1\" or \"east-webapp-prod-10\". | Improve this Doc View Source ResourceType Gets the kind of Azure application hosting this service. Declaration string ResourceType { get; } Property Value Type Description System.String The kind of Azure application hosting this service. null will be returned if the value could not be determined."
  },
  "api/OpenCollar.Extensions.Environment.IEnvironmentMetadataProvider.html": {
    "href": "api/OpenCollar.Extensions.Environment.IEnvironmentMetadataProvider.html",
    "title": "Interface IEnvironmentMetadataProvider | API Documentation",
    "keywords": "Interface IEnvironmentMetadataProvider The public interface of a service that provides the environment metadata for a given application. Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public interface IEnvironmentMetadataProvider Remarks This must be implemented by the consumer - there are no common patterns. This might involve parsing host names, environment variables and maybe supplied configuration. Properties | Improve this Doc View Source EnvironmentTypes Gets the types of environment in which an application or resource may be found . Declaration IEnumerable<EnvironmentType> EnvironmentTypes { get; } Property Value Type Description System.Collections.Generic.IEnumerable < EnvironmentType > The environment in which an application or resource may be found. Methods | Improve this Doc View Source GetEnvironmentMetadata() Gets an object that provides basic metadata about the environment in which the application is running. Declaration IEnvironmentMetadata GetEnvironmentMetadata() Returns Type Description IEnvironmentMetadata An object that provides basic metadata about the environment in which the application is running. | Improve this Doc View Source GetEnvironmentMetadata(String) Gets an object that provides basic metadata about the resource specified. Declaration IEnvironmentMetadata GetEnvironmentMetadata(string resourceName) Parameters Type Name Description System.String resourceName The name of the resource for which to determine the environment metadata. Returns Type Description IEnvironmentMetadata | Improve this Doc View Source GetEnvironmentType(IEnvironmentMetadata) Gets the type of the environment to which the metadata object refers. Declaration EnvironmentType GetEnvironmentType(IEnvironmentMetadata metadata) Parameters Type Name Description IEnvironmentMetadata metadata The metadata object for which to get an environment. Returns Type Description EnvironmentType The environment type for the metadata object given, or null if no match could be found. | Improve this Doc View Source GetResourceEnvironment(String) Gets the environment from a resource name. Declaration string GetResourceEnvironment(string resourceName) Parameters Type Name Description System.String resourceName The name of the resource for which to determine the environment. Returns Type Description System.String The environment name for the environment, e.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. Environment names are always treated as case insensitive. | Improve this Doc View Source IsValidEnvironmentPairing(IEnvironmentMetadata, String) Determines whether the specified resource should be used with the environment metadata given. Declaration bool? IsValidEnvironmentPairing(IEnvironmentMetadata environmentMetadata, string resourceName) Parameters Type Name Description IEnvironmentMetadata environmentMetadata The metadata defining the application environment. System.String resourceName The name of the resource to validate. Returns Type Description System.Nullable < System.Boolean > true if the specified resource should be used with the environment metadata given; otherwise, false . null will be returned if the value could not be determined."
  },
  "api/OpenCollar.Extensions.Environment.MismatchedEnvironmentException.html": {
    "href": "api/OpenCollar.Extensions.Environment.MismatchedEnvironmentException.html",
    "title": "Class MismatchedEnvironmentException | API Documentation",
    "keywords": "Class MismatchedEnvironmentException An exception that represents a mismatch in environments (between the application environment and a resource that the application depends upon). Inheritance System.Object System.Exception MismatchedEnvironmentException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax [Serializable] public sealed class MismatchedEnvironmentException : Exception, ISerializable Constructors | Improve this Doc View Source MismatchedEnvironmentException() Initializes a new instance of the MismatchedEnvironmentException class. Declaration public MismatchedEnvironmentException() | Improve this Doc View Source MismatchedEnvironmentException(String) Initializes a new instance of the MismatchedEnvironmentException class with a specified error message. Declaration public MismatchedEnvironmentException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MismatchedEnvironmentException(String, Exception) Initializes a new instance of the MismatchedEnvironmentException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MismatchedEnvironmentException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. Properties | Improve this Doc View Source ApplicationEnvironment Gets the application environment. Declaration public string ApplicationEnvironment { get; set; } Property Value Type Description System.String The environment name for the host application, e.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. null will be returned if the value could not be determined. Environment names are always treated as case insensitive. | Improve this Doc View Source ResourceEnvironment Gets the resource environment. Declaration public string ResourceEnvironment { get; set; } Property Value Type Description System.String The environment name for the resource at fault, e.g. \"PDN\", \"UAT\" or \"DEV\" - this is left up to the implementing application. null will be returned if the value could not be determined. Environment names are always treated as case insensitive. Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Overrides System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/OpenCollar.Extensions.Environment.ServiceCollectionFluentExtensions.html": {
    "href": "api/OpenCollar.Extensions.Environment.ServiceCollectionFluentExtensions.html",
    "title": "Class ServiceCollectionFluentExtensions | API Documentation",
    "keywords": "Class ServiceCollectionFluentExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing the application service and related services to be registered. Inheritance System.Object ServiceCollectionFluentExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenCollar.Extensions.Environment Assembly : OpenCollar.Extensions.Environment.dll Syntax public static class ServiceCollectionFluentExtensions Examples The starting point is to create an implementation of the IEnvironmentMetadata object (typically dervied from the EnvironmentMetadata base class). This can generate environment information based on a \"resource name\" which can be used to determine the details of the environment. Methods | Improve this Doc View Source AddApplicationService<TEnvironmentMetadataProvider>(IServiceCollection) Adds the application service and the specified environment metadata provider. Declaration public static IServiceCollection AddApplicationService<TEnvironmentMetadataProvider>(this IServiceCollection serviceCollection) where TEnvironmentMetadataProvider : class, IEnvironmentMetadataProvider Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to which to add the services. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The service collection provided. Type Parameters Name Description TEnvironmentMetadataProvider The type of the environment metadata provider that should be used to parse \"resource names\" and generate IEnvironmentMetadata objects. Exceptions Type Condition System.ArgumentNullException serviceCollection was null ."
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenCollar.Extensions.Environment | API Documentation",
    "keywords": "OpenCollar.Extensions.Environment A library providing access to environmental metadata. NuGet Package Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.Environment/ Project Latest Build: Source Code on GitHub Issue Tracking on GitHub Documentation on GitHub Pages Usage A library providing access to environmental metadata. Related Projects OpenCollar.Extensions OpenCollar.Extensions.ApplicationInsights OpenCollar.Extensions.Collections OpenCollar.Extensions.Configuraton OpenCollar.Extensions.Environment OpenCollar.Extensions.IO OpenCollar.Extensions.Logging OpenCollar.Extensions.Security OpenCollar.Extensions.Threading OpenCollar.Extensions.Validation"
  },
  "usage/index.html": {
    "href": "usage/index.html",
    "title": "Basics | API Documentation",
    "keywords": "Basics The purpose of the libarary is to provide simple and concise extension methods that allow arguments and state to be validated efficiently at runtime."
  }
}